@import "~@nti/style-common";

.selectable-entity {
	$avatarsize: 2.5rem;
	$iconsize: 1.375rem;

	position: relative;
	margin: 0;
	color: var(--primary-grey);
	display: flex;
	align-items: center;

	.avatar-spacer {
		position: relative;
		padding: 0.5rem 0.5rem 0.5rem ($avatarsize + 0.5rem);
		min-height: $avatarsize;
		flex: 1 1 auto;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	a {
		color: var(--primary-grey);
	}

	.username {
		font-family: var(--header-font-family);
		font-weight: 700;
	}

	.association {
		font-size: 0.625rem;
		font-weight: 400;
		color: var(--primary-grey);
	}

	.state-label {
		font-size: 0.75rem;
		font-weight: 600;
		color: rgba(0, 0, 0, 0.6);
		margin-right: 0.5rem;
		flex: 1 1 auto;
		text-align: right;

		&.selected {
			color: var(--primary-blue);
		}
	}

	.tinyloader {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translateY(-50%);
	}

	.select-button {
		min-width: $iconsize + 0.5rem;

		&::after {
			content: '\221a';
			color: white;
			border: 0.0625rem solid #979797;
			box-shadow: inset 0 0.0625rem 0.0625rem 0 rgba(0, 0, 0, 0.3);
			border-radius: 50%;
			width: $iconsize;
			height: $iconsize;
			line-height: 1.3;
			text-indent: 0.13rem;
			position: absolute;
			right: 0.5rem;
			top: 50%;
			transform: translateY(-50%);
			font-size: 1rem;
			font-family: 'icomoon', serif;
			background-color: #fff;
			transition: background-color 0.5s;
		}

		&.selected {
			&::after {
				background: var(--primary-blue);
				border: 0.0625rem solid #3687b6;
				box-shadow: inset 0 0.0625rem 0.0625rem 0 rgba(#fff, 0.5);
			}
		}

		&.busy {
			&::after {
				$border: rgba(#3687b6, 0.8);

				color: transparent; //changing 'content' breaks transitions on iOS but we want it to be empty.
				box-shadow: none;
				animation: rotation 0.9s infinite linear;
				border-color: $border;
				background: radial-gradient(ellipse 5px 20px, $border 21%, rgba(var(--primary-blue-rgb), 0.4) 21%) white;
				margin-top: -($iconsize/2); // the rotation overwrites our transform for vertical centering.
			}
		}

		&.removable {
			&::after {
				content: 'X';
				background-color: var(--primary-red);
			}
		}
	}

	&:not(.selected) {
		// opacity: .4;
	}

	//we need specificity here...
	.avatar-spacer .avatar {
		width: $avatarsize;
		height: $avatarsize;
		position: absolute;
		left: 0;
		top: 50%;
		transform: translateY(-50%);
	}
}
