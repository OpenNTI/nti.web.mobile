@import "~@nti/style-common";

@mixin highlight-colors($onParentSelector: true, $selector:'') {
	$highlight-colors: (
		// (name, menu color, hover, regular color)
		('yellow',var(--highlight-colors-yellow-menu),var(--highlight-colors-yellow-hover),var(--highlight-colors-yellow)),
		('green',var(--highlight-colors-green-menu),var(--highlight-colors-green-hover),var(--highlight-colors-green)),
		('blue',var(--highlight-colors-blue-menu),var(--highlight-colors-blue-hover),var(--highlight-colors-blue))
	);

	@each $item in $highlight-colors {
		$name: nth($item, 1);
		$menu_color: nth($item, 2);
		$hover_color: nth($item, 3);
		$highlight_color: rgba($hover_color, 0.65);
		// $highlight_color: nth($item, 4);

		$prefix: if($onParentSelector, '&', '');

		$withColor: "#{$prefix}.#{$name} #{$selector}";
		$withOutColor: "#{$prefix} #{$selector}";

		$computedSelector: if($name=='blue', $withOutColor, $withColor);

		#{$computedSelector} {
			background-color: $highlight_color;
			box-shadow: 0 0 3px 0 $highlight_color;

			&.highlight-mouse-over {
				background-color: $hover_color;
			}
		}
	}
}

.application-highlight {
	&.suppressed {
		//do nothing special when range is suppressed.
	}

	& + li.part,
	& + li.exercise {
		&::before, &::after {
			z-index: 1;
			color: #076da7;
		}
	}

	&.plain {
		overflow: hidden;

		&, * {
			position: relative;
		}

		.math & {
			display: inline-block;
		}

		&.colored {
			@include highlight-colors();
		}

		&:not(.colored) {
			&, .math {
				background: none;
				color: var(--primary-grey);
				border-bottom: 1px solid #9fd9fa;
			}

			& & {//the "& &" is intentional
				&, .math {
					border-bottom: none;
				}
			}
		}
	}
}
