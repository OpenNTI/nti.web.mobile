
@mixin choice-icon($type, $selector) {
	input[type=#{$type}] + div::before { @extend #{$selector}; }
	input[type=#{$type}]:checked + div::before { @extend #{$selector}-active; }

	html:not(.touch) &:hover input[type=#{$type}],
	input[type=#{$type}]:focus,
	input[type=#{$type}]:active {
		&:not(:checked):not(.disabled) + div::before { @extend #{$selector}-hover; }
	}
}

.question-part .multiple-choice {
	border: 1px solid $tertiary-grey;
	margin: 0 0 1rem 0;

	.choice {
		display: block;
		position: relative;
		border: 0px solid $tertiary-grey;
		line-height: 2;

		&:not(:last-of-type) {
			border-bottom-width: 1px;
		}

		input {
			position: absolute !important;
			opacity: 0;//Cannot "display:none" nor "visibilitiy:hidden" or you cannot access it with tab/keyboard.

			& + div {
				$pad: 1rem;
				padding: $pad 0 $pad 50px;

				&::before {
					content: '';
					background-repeat: no-repeat;
					background-position: center;
					position: absolute;
					top: $pad + 0.3rem;
					left: 1rem;
					width: 18px;
					height: 18px;
				}
			}
		}


		input:checked + div { box-shadow: inset 4px 0 0 0 $neutral; }
		&.correct input:checked + div {	box-shadow: inset 4px 0 0 0 $correct; }
		&.incorrect input:checked + div { box-shadow: inset 4px 0 0 0 $incorrect; }


		@include choice-icon(radio, '%radiobox-image');
		@include choice-icon(checkbox, '%checkbox-image');


		&.correct input[type]:checked + div::before { @extend %circle-green-check; }
		&.incorrect input[type]:checked + div::before { @extend %circle-red-x; }

		.numeral {
			position: relative;
			float: left;
			display: block;
			min-width: 1rem;
			margin-right: 0.2rem;
			font-weight: bold;
		}

		.choice-content {
			position: relative;
			overflow: hidden;
			display: block;
		}
	}

}

.multiple-choice.solutions {

	.solution {
		display: block;
		position: relative;
		line-height: 2;
		color: $correct;
	}

	.numeral {
		margin-right: 0.5rem;
		font-weight: bold;
	}
}
