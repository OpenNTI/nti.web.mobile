.selectable-entity {
	$avatarsize: 2.5rem;
	$iconsize: 1rem;
	min-height: $avatarsize;
	padding: .5rem $iconsize;
	padding-left: $avatarsize + .5rem;
	position: relative;
	margin: 0;
	color: $primary-grey;
	a {
		color: $body-font-color;
	}
	.username {
		font-family: 'Open Sans Condensed';
		font-weight: 700;
	}
	.state-label {
		position: absolute;
		right: 1rem;
		top: 50%;
		transform: translateY(-50%);
		font-size: .75rem;
		font-weight: 600;
		color: rgba(0,0,0,.6);
		&.selected {
			color: $primary-blue;
		}
	}

	.tinyloader {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translateY(-50%);
	}

	.select-button {
		&::after {
			content: '\221a';
			color: white;
			box-shadow: 0 0 2px 1px rgba(0,0,0,0.5), inset 0 3px 4px rgba(0,0,0,.2);
			border-radius: 50%;
			width: $iconsize;
			height: $iconsize;
			line-height: 1.1;
			position: absolute;
			right: .5em;
			top: 50%;
			transform: translateY(-50%);
			font-size: $iconsize;
			font-family: 'icomoon';
			background-color:rgba(255,255,255,1);
			transition: background-color .5s;
		}
		&.selected {
			&::after {
				background-color: rgba($primary-blue, 1);
				box-shadow: 0 0 1px 2px rgba(0, 0, 0, 0.5), inset 0 1px 1px 0px rgba(255, 255, 255, 0.6);
			}
		}
		&.busy {
			&::after {
				color: transparent; //changing 'content' breaks transitions on iOS but we want it to be empty.
				box-shadow: 0 0 1px 2px rgba(0, 0, 0, 0.5);
				animation: rotation 0.9s infinite linear;
				background: radial-gradient(5px 20px, white 21%, #b8b8b8 21%) white;
				margin-top: -($iconsize/2); // the rotation overwrites our transform for vertical centering.
			}
		}
		&.removable {
			&::after {
				content: 'X';
				background-color: $primary-red;
			}
		}
	}

	&:not(.selected) {
		// opacity: .4;
	}

	.avatar {
		width: $avatarsize;
		height: $avatarsize;
		position: absolute;
		left: 0;
		top: 50%;
		transform: translateY(-50%);
	}
}
