{
    "project": {
        "name": "nt-mobile",
        "description": "Mobile-first implementation of the NextThought web app.",
        "version": "0.0.0"
    },
    "files": {
        "doc/src/main/js/common/components/forms/Button.js": {
            "name": "doc/src/main/js/common/components/forms/Button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/AppContainer.js": {
            "name": "doc/src/main/js/common/components/AppContainer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/Avatar.js": {
            "name": "doc/src/main/js/common/components/Avatar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/BrowseCourseDropdown.js": {
            "name": "doc/src/main/js/common/components/BrowseCourseDropdown.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/CatalogEntry.js": {
            "name": "doc/src/main/js/common/components/CatalogEntry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/CourseSelector.js": {
            "name": "doc/src/main/js/common/components/CourseSelector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/Footer.js": {
            "name": "doc/src/main/js/common/components/Footer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/LeftNav.js": {
            "name": "doc/src/main/js/common/components/LeftNav.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/MainContentPanel.js": {
            "name": "doc/src/main/js/common/components/MainContentPanel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/Nav.js": {
            "name": "doc/src/main/js/common/components/Nav.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/components/Profile.js": {
            "name": "doc/src/main/js/common/components/Profile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/constants/HttpStatusCodes.js": {
            "name": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "modules": {},
            "classes": {
                "HTTP_STATUS_CODES": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/dispatcher/AppDispatcher.js": {
            "name": "doc/src/main/js/common/dispatcher/AppDispatcher.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/dispatcher/Dispatcher.js": {
            "name": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/dispatcher/invariant.js": {
            "name": "doc/src/main/js/common/dispatcher/invariant.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/AppConfig.js": {
            "name": "doc/src/main/js/common/AppConfig.js",
            "modules": {},
            "classes": {
                "AppConfig": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/Utils.js": {
            "name": "doc/src/main/js/common/Utils.js",
            "modules": {},
            "classes": {
                "Utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/common/index.js": {
            "name": "doc/src/main/js/common/index.js",
            "modules": {
                "common": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/components/DebugInfo.js": {
            "name": "doc/src/main/js/login/components/DebugInfo.js",
            "modules": {},
            "classes": {
                "DebugInfo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/components/LoginPanel.js": {
            "name": "doc/src/main/js/login/components/LoginPanel.js",
            "modules": {},
            "classes": {
                "LoginForm": 1,
                "LoginPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/LoginActions.js": {
            "name": "doc/src/main/js/login/LoginActions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/LoginConstants.js": {
            "name": "doc/src/main/js/login/LoginConstants.js",
            "modules": {},
            "classes": {
                "LoginConstants": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/LoginController.js": {
            "name": "doc/src/main/js/login/LoginController.js",
            "modules": {},
            "classes": {
                "ResponseHandlers": 1,
                "LoginController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/login/index.js": {
            "name": "doc/src/main/js/login/index.js",
            "modules": {
                "login": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/app.js": {
            "name": "doc/src/main/js/app.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "doc/src/main/js/index.js": {
            "name": "doc/src/main/js/index.js",
            "modules": {
                "nt-mobile": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "nt-mobile": {
            "name": "nt-mobile",
            "submodules": {
                "common": 1
            },
            "classes": {
                "Button": 1,
                "HTTP_STATUS_CODES": 1,
                "AppConfig": 1,
                "Utils": 1,
                "DebugInfo": 1,
                "LoginForm": 1,
                "LoginPanel": 1,
                "LoginConstants": 1,
                "ResponseHandlers": 1,
                "LoginController": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 178
        },
        "common": {
            "name": "common",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/common/index.js",
            "line": 1,
            "description": "Shared classes and components."
        },
        "login": {
            "name": "login",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "doc/src/main/js/login/index.js",
            "line": 1,
            "description": "Login-related functionality"
        }
    },
    "classes": {
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "file": "doc/src/main/js/common/components/forms/Button.js",
            "line": 7,
            "description": "React Button component"
        },
        "HTTP_STATUS_CODES": {
            "name": "HTTP_STATUS_CODES",
            "shortname": "HTTP_STATUS_CODES",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 1,
            "description": "Constants for HTTP response codes."
        },
        "AppConfig": {
            "name": "AppConfig",
            "shortname": "AppConfig",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "file": "doc/src/main/js/common/AppConfig.js",
            "line": 3,
            "description": "Application configuration/settings"
        },
        "Utils": {
            "name": "Utils",
            "shortname": "Utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "file": "doc/src/main/js/common/Utils.js",
            "line": 2
        },
        "DebugInfo": {
            "name": "DebugInfo",
            "shortname": "DebugInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/components/DebugInfo.js",
            "line": 10,
            "description": "Utility React component for emitting debug info for LoginPanel."
        },
        "LoginForm": {
            "name": "LoginForm",
            "shortname": "LoginForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/components/LoginPanel.js",
            "line": 13,
            "description": "Login Form React component"
        },
        "LoginPanel": {
            "name": "LoginPanel",
            "shortname": "LoginPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/components/LoginPanel.js",
            "line": 73,
            "description": "React component for housing LoginForm"
        },
        "LoginConstants": {
            "name": "LoginConstants",
            "shortname": "LoginConstants",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 1,
            "description": "Constants related to (and used by) the login modules."
        },
        "ResponseHandlers": {
            "name": "ResponseHandlers",
            "shortname": "ResponseHandlers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 84,
            "description": "Collection of methods for handling responses from the dataserver related to logins."
        },
        "LoginController": {
            "name": "LoginController",
            "shortname": "LoginController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "nt-mobile",
            "namespace": "",
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 178,
            "description": "Coordinates login actions between the view and the dataserver\nand emits related events."
        }
    },
    "classitems": [
        {
            "file": "doc/src/main/js/common/components/forms/Button.js",
            "line": 1,
            "class": "Button"
        },
        {
            "file": "doc/src/main/js/common/components/AppContainer.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/AppContainer.js",
            "line": 38,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/Avatar.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/BrowseCourseDropdown.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/CatalogEntry.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/CourseSelector.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/Footer.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/LeftNav.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/MainContentPanel.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/Nav.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/components/Profile.js",
            "line": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 7,
            "itemtype": "property",
            "name": "NO_CONTENT (204)",
            "static": 1,
            "final": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 14,
            "description": "IE8 mangles 204 responses from ajax requests into 1223.",
            "itemtype": "property",
            "name": "NO_CONTENT_IE8 (1223)",
            "static": 1,
            "final": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 22,
            "itemtype": "property",
            "name": "UNAUTHORIZED (401)",
            "static": 1,
            "final": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 29,
            "itemtype": "property",
            "name": "NOT_FOUND (404)",
            "static": 1,
            "final": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/constants/HttpStatusCodes.js",
            "line": 36,
            "itemtype": "property",
            "name": "SERVER_ERROR (500)",
            "static": 1,
            "final": 1,
            "class": "HTTP_STATUS_CODES"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/AppDispatcher.js",
            "line": 20,
            "description": "A bridge function between the views and the dispatcher, marking the action\nas a view action.  Another variant here could be handleServerAction.",
            "params": [
                {
                    "name": "action",
                    "description": "The data coming from the view.",
                    "type": "Object"
                }
            ],
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 18,
            "description": "Dispatcher is used to broadcast payloads to registered callbacks. This is\ndifferent from generic pub-sub systems in two ways:\n\n  1) Callbacks are not subscribed to particular events. Every payload is\n     dispatched to every registered callback.\n  2) Callbacks can be deferred in whole or part until other callbacks have\n     been executed.\n\nFor example, consider this hypothetical flight destination form, which\nselects a default city when a country is selected:\n\n  var flightDispatcher = new Dispatcher();\n\n  // Keeps track of which country is selected\n  var CountryStore = {country: null};\n\n  // Keeps track of which city is selected\n  var CityStore = {city: null};\n\n  // Keeps track of the base flight price of the selected city\n  var FlightPriceStore = {price: null}\n\nWhen a user changes the selected city, we dispatch the payload:\n\n  flightDispatcher.dispatch({\n    actionType: 'city-update',\n    selectedCity: 'paris'\n  });\n\nThis payload is digested by `CityStore`:\n\n  flightDispatcher.register(function(payload)) {\n    if (payload.actionType === 'city-update') {\n      CityStore.city = payload.selectedCity;\n    }\n  });\n\nWhen the user selects a country, we dispatch the payload:\n\n  flightDispatcher.dispatch({\n    actionType: 'country-update',\n    selectedCountry: 'australia'\n  });\n\nThis payload is digested by both stores:\n\n   CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n    if (payload.actionType === 'country-update') {\n      CountryStore.country = payload.selectedCountry;\n    }\n  });\n\nWhen the callback to update `CountryStore` is registered, we save a reference\nto the returned token. Using this token with `waitFor()`, we can guarantee\nthat `CountryStore` is updated before the callback that updates `CityStore`\nneeds to query its data.\n\n  CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n    if (payload.actionType === 'country-update') {\n      // `CountryStore.country` may not be updated.\n      flightDispatcher.waitFor([CountryStore.dispatchToken]);\n      // `CountryStore.country` is now guaranteed to be updated.\n\n      // Select the default city for the new country\n      CityStore.city = getDefaultCityForCountry(CountryStore.country);\n    }\n  });\n\nThe usage of `waitFor()` can be chained, for example:\n\n  FlightPriceStore.dispatchToken =\n    flightDispatcher.register(function(payload)) {\n      switch (payload.actionType) {\n        case 'country-update':\n          flightDispatcher.waitFor([CityStore.dispatchToken]);\n          FlightPriceStore.price =\n            getFlightPriceStore(CountryStore.country, CityStore.city);\n          break;\n\n        case 'city-update':\n          FlightPriceStore.price =\n            FlightPriceStore(CountryStore.country, CityStore.city);\n          break;\n    }\n  });\n\nThe `country-update` payload will be guaranteed to invoke the stores'\nregistered callbacks in order: `CountryStore`, `CityStore`, then\n`FlightPriceStore`.",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 118,
            "description": "Registers a callback to be invoked with every dispatched payload. Returns\na token that can be used with `waitFor()`.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 131,
            "description": "Removes a callback based on its token.",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 145,
            "description": "Waits for the callbacks specified to be invoked before continuing execution\nof the current callback. This method should only be used by a callback in\nresponse to a dispatched payload.",
            "params": [
                {
                    "name": "ids",
                    "description": "",
                    "type": "Array<string>"
                }
            ],
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 177,
            "description": "Dispatches a payload to all registered callbacks.",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 200,
            "description": "Is this Dispatcher currently dispatching.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 209,
            "description": "Call the calback stored with the given id. Also do some internal\nbookkeeping.",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "internal": "",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 222,
            "description": "Set up bookkeeping needed when dispatching.",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object"
                }
            ],
            "internal": "",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/Dispatcher.js",
            "line": 237,
            "description": "Clear bookkeeping used for dispatching.",
            "internal": "",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/invariant.js",
            "line": 1,
            "description": "Copyright (c) 2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "invariant",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/dispatcher/invariant.js",
            "line": 14,
            "description": "Use invariant() to assert state which your program assumes to be true.\n\nProvide sprintf-style format (only %s is supported) and arguments\nto provide information about what broke and what you were\nexpecting.\n\nThe invariant message will be stripped in production, but the invariant\nwill remain to ensure logic does not differ in production.",
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/AppConfig.js",
            "line": 8,
            "description": "Where to go upon successful login.",
            "itemtype": "property",
            "name": "login_success_url",
            "static": 1,
            "final": 1,
            "class": "AppConfig"
        },
        {
            "file": "doc/src/main/js/common/Utils.js",
            "line": 17,
            "description": "Make a server request.",
            "itemtype": "method",
            "name": "call",
            "params": [
                {
                    "name": "url",
                    "description": "The url to request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "An object or query string to submit as part of the request",
                    "type": "Mixed"
                },
                {
                    "name": "callback",
                    "description": "The function to invoke upon request completion",
                    "type": "Function"
                },
                {
                    "name": "forceMethod",
                    "description": "Force the request to use this method (e.g. 'GET' or 'POST')",
                    "type": "String"
                }
            ],
            "class": "Utils"
        },
        {
            "file": "doc/src/main/js/common/Utils.js",
            "line": 62,
            "description": "Serializes an object to be submitted as part of an web/ajax request.",
            "itemtype": "method",
            "name": "toQueryString",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to serialize.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Serialized, URI-encoded, querystring form of the given object.",
                "type": "String"
            },
            "class": "Utils"
        },
        {
            "file": "doc/src/main/js/login/components/DebugInfo.js",
            "line": 1,
            "class": "DebugInfo",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/components/LoginPanel.js",
            "line": 1,
            "class": "LoginForm",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/components/LoginPanel.js",
            "line": 26,
            "description": "Submit-handler for the html login form; Invokes LoginActions.log_in.",
            "itemtype": "method",
            "name": "handleSubmit",
            "class": "LoginForm",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/components/LoginPanel.js",
            "line": 39,
            "description": "onChange handler for the username field. Triggers LoginActions.update_links",
            "itemtype": "method",
            "name": "usernameChanged",
            "class": "LoginForm",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginActions.js",
            "line": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginActions.js",
            "line": 8,
            "description": "Actions available to views for login-related functionality.",
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginActions.js",
            "line": 13,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginActions.js",
            "line": 20,
            "description": "Attempt a login using the provided credentials.",
            "itemtype": "method",
            "name": "log_in",
            "params": [
                {
                    "name": "credentials",
                    "description": "The credentials to submit for authentication. Currently expects 'username' and 'password'.",
                    "type": "Object"
                }
            ],
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginActions.js",
            "line": 32,
            "description": "Log the current user out of the system.",
            "itemtype": "method",
            "name": "logOut",
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 9,
            "itemtype": "property",
            "name": "ACCOUNT_CREATE",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 16,
            "itemtype": "property",
            "name": "ACCOUNT_PREFLIGHT_CREATE",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 23,
            "itemtype": "property",
            "name": "FORGOT_PASSCODE",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 30,
            "itemtype": "property",
            "name": "FORGOT_USERNAME",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 37,
            "description": "The rel/key for the handshake link",
            "itemtype": "property",
            "name": "HANDSHAKE_LINK",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 45,
            "description": "The rel/key for the logon continue link",
            "itemtype": "property",
            "name": "LOGIN_CONTINUE_LINK",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 53,
            "description": "The rel/key for the log-out link.",
            "itemtype": "property",
            "name": "LOGOUT_LINK",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 61,
            "description": "The rel for the password login link from the dataserver.",
            "itemtype": "property",
            "name": "LOGIN_PASSWORD_LINK",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 69,
            "itemtype": "property",
            "name": "MIMETYPE_PONG",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 76,
            "itemtype": "property",
            "name": "RESET_PASSCODE",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 86,
            "description": "Emitted by LoginForm input changes.",
            "itemtype": "event",
            "name": "LOGIN_FORM_CHANGED",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 94,
            "description": "The name of the action for initializing the LoginController.",
            "itemtype": "property",
            "name": "LOGIN_BEGIN",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 102,
            "description": "Action name for attempting a password login.",
            "itemtype": "property",
            "name": "LOGIN_PASSWORD",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 110,
            "itemtype": "property",
            "name": "LOGIN_SUCCESS",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 117,
            "itemtype": "property",
            "name": "LOGIN_FAILURE",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 124,
            "description": "The event emitted by the LoginController when its links change.",
            "itemtype": "property",
            "name": "LOGIN_LINKS_CHANGED",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginConstants.js",
            "line": 132,
            "description": "Action for requesting a ping/pong/handshake with the\ndataserver to get links for a given username.",
            "itemtype": "property",
            "name": "UPDATE_LINKS",
            "type": "String",
            "final": 1,
            "class": "LoginConstants",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 22,
            "description": "Sends a ping to the dataserver to retrieve a 'Pong' containing links for available next steps.",
            "itemtype": "method",
            "name": "begin",
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 39,
            "description": "Send a ping to dataserver to fetch available links.",
            "itemtype": "method",
            "name": "updateLinks",
            "params": [
                {
                    "name": "credentials",
                    "description": "Object with username and password properties for which we're requesting links.",
                    "type": "Object"
                }
            ],
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 49,
            "description": "Attempt a login using the provided credentials.",
            "itemtype": "method",
            "name": "log_in",
            "params": [
                {
                    "name": "credentials",
                    "description": "The credentials (currently expects username, password)",
                    "type": "Object"
                }
            ],
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 89,
            "description": "Handles a 'pong' response from a call to dataserver 'ping'.\nIf the pong includes a handshake link and we have a username\nthis method will send the handshake request.",
            "itemtype": "method",
            "name": "pong",
            "params": [
                {
                    "name": "response",
                    "description": "The response from the call.",
                    "type": "Mixed"
                }
            ],
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 120,
            "description": "General-purpose failure handler.",
            "itemtype": "method",
            "name": "fail",
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 128,
            "description": "Handles response from a call to a dataserver password login attempt.",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "response",
                    "description": "The response from the call.",
                    "type": "Mixed"
                }
            ],
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 155,
            "description": "Response handler for logout call.",
            "itemtype": "method",
            "name": "logOut",
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 163,
            "description": "Handles response from a dataserver handshake call.",
            "itemtype": "method",
            "name": "login",
            "params": [
                {
                    "name": "response",
                    "description": "The response from the call.",
                    "type": "Mixed"
                }
            ],
            "class": "ResponseHandlers",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 187,
            "description": "Indicates whether we have the necessary information required to attempt \na password login.\nThe current implementation simply reflects whether we have a link\nwith rel=logon.nti.password",
            "itemtype": "method",
            "name": "canDoPasswordLogin",
            "return": {
                "description": "Whether we have the necessary information required\nto attempt a password login.",
                "type": "Boolean"
            },
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 201,
            "description": "Indicates whether we're currently logged in.",
            "itemtype": "method",
            "name": "isLoggedIn",
            "return": {
                "description": "Whether we're currently logged in.",
                "type": "Boolean"
            },
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 215,
            "description": "Updates the state with properties from data. They will be merged with the\ncurrent state so it is acceptable and expected for the argument to contain only the\nparts it cares about. While this mimicks the signature of the React method, this is\nnot a React component and should not be confused with one.",
            "itemtype": "method",
            "name": "setState",
            "params": [
                {
                    "name": "data",
                    "description": "Object representing the changed state.",
                    "type": "Object"
                }
            ],
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 228,
            "description": "Looks up a link by its rel attribute and returns its href.",
            "itemtype": "method",
            "name": "getHref",
            "params": [
                {
                    "name": "link_rel",
                    "description": "The rel attribute of the sought link.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The href for the link with the specified rel attribute, or null.",
                "type": "String"
            },
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 242,
            "description": "Register to be notified of state changes for this LoginController.",
            "itemtype": "method",
            "name": "addChangeListener",
            "params": [
                {
                    "name": "callback",
                    "description": "Function to be invoked in response to a change event.",
                    "type": "Function"
                }
            ],
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/LoginController.js",
            "line": 251,
            "description": "Un-register a previously registered event callback listener",
            "itemtype": "method",
            "name": "removeChangeListener",
            "params": [
                {
                    "name": "callback",
                    "description": "The callback to un-register.",
                    "type": "Function"
                }
            ],
            "class": "LoginController",
            "module": "nt-mobile"
        },
        {
            "file": "doc/src/main/js/login/index.js",
            "line": 6,
            "see": [
                "{@link LoginActions}"
            ],
            "class": "",
            "module": "login"
        },
        {
            "file": "doc/src/main/js/login/index.js",
            "line": 11,
            "class": "",
            "module": "login"
        },
        {
            "file": "doc/src/main/js/app.js",
            "line": 1,
            "class": "",
            "module": "login"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: internal",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:209"
        },
        {
            "message": "unknown tag: internal",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:222"
        },
        {
            "message": "unknown tag: internal",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:237"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " doc/src/main/js/common/dispatcher/invariant.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/forms/Button.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/AppContainer.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/AppContainer.js:38"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/Avatar.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/BrowseCourseDropdown.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/CatalogEntry.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/CourseSelector.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/Footer.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/LeftNav.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/MainContentPanel.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/Nav.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/common/components/Profile.js:1"
        },
        {
            "message": "Missing item type\nA bridge function between the views and the dispatcher, marking the action\nas a view action.  Another variant here could be handleServerAction.",
            "line": " doc/src/main/js/common/dispatcher/AppDispatcher.js:20"
        },
        {
            "message": "Missing item type\nDispatcher is used to broadcast payloads to registered callbacks. This is\ndifferent from generic pub-sub systems in two ways:\n\n  1) Callbacks are not subscribed to particular events. Every payload is\n     dispatched to every registered callback.\n  2) Callbacks can be deferred in whole or part until other callbacks have\n     been executed.\n\nFor example, consider this hypothetical flight destination form, which\nselects a default city when a country is selected:\n\n  var flightDispatcher = new Dispatcher();\n\n  // Keeps track of which country is selected\n  var CountryStore = {country: null};\n\n  // Keeps track of which city is selected\n  var CityStore = {city: null};\n\n  // Keeps track of the base flight price of the selected city\n  var FlightPriceStore = {price: null}\n\nWhen a user changes the selected city, we dispatch the payload:\n\n  flightDispatcher.dispatch({\n    actionType: 'city-update',\n    selectedCity: 'paris'\n  });\n\nThis payload is digested by `CityStore`:\n\n  flightDispatcher.register(function(payload)) {\n    if (payload.actionType === 'city-update') {\n      CityStore.city = payload.selectedCity;\n    }\n  });\n\nWhen the user selects a country, we dispatch the payload:\n\n  flightDispatcher.dispatch({\n    actionType: 'country-update',\n    selectedCountry: 'australia'\n  });\n\nThis payload is digested by both stores:\n\n   CountryStore.dispatchToken = flightDispatcher.register(function(payload) {\n    if (payload.actionType === 'country-update') {\n      CountryStore.country = payload.selectedCountry;\n    }\n  });\n\nWhen the callback to update `CountryStore` is registered, we save a reference\nto the returned token. Using this token with `waitFor()`, we can guarantee\nthat `CountryStore` is updated before the callback that updates `CityStore`\nneeds to query its data.\n\n  CityStore.dispatchToken = flightDispatcher.register(function(payload) {\n    if (payload.actionType === 'country-update') {\n      // `CountryStore.country` may not be updated.\n      flightDispatcher.waitFor([CountryStore.dispatchToken]);\n      // `CountryStore.country` is now guaranteed to be updated.\n\n      // Select the default city for the new country\n      CityStore.city = getDefaultCityForCountry(CountryStore.country);\n    }\n  });\n\nThe usage of `waitFor()` can be chained, for example:\n\n  FlightPriceStore.dispatchToken =\n    flightDispatcher.register(function(payload)) {\n      switch (payload.actionType) {\n        case 'country-update':\n          flightDispatcher.waitFor([CityStore.dispatchToken]);\n          FlightPriceStore.price =\n            getFlightPriceStore(CountryStore.country, CityStore.city);\n          break;\n\n        case 'city-update':\n          FlightPriceStore.price =\n            FlightPriceStore(CountryStore.country, CityStore.city);\n          break;\n    }\n  });\n\nThe `country-update` payload will be guaranteed to invoke the stores'\nregistered callbacks in order: `CountryStore`, `CityStore`, then\n`FlightPriceStore`.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:18"
        },
        {
            "message": "Missing item type\nRegisters a callback to be invoked with every dispatched payload. Returns\na token that can be used with `waitFor()`.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:118"
        },
        {
            "message": "Missing item type\nRemoves a callback based on its token.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:131"
        },
        {
            "message": "Missing item type\nWaits for the callbacks specified to be invoked before continuing execution\nof the current callback. This method should only be used by a callback in\nresponse to a dispatched payload.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:145"
        },
        {
            "message": "Missing item type\nDispatches a payload to all registered callbacks.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:177"
        },
        {
            "message": "Missing item type\nIs this Dispatcher currently dispatching.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:200"
        },
        {
            "message": "Missing item type\nCall the calback stored with the given id. Also do some internal\nbookkeeping.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:209"
        },
        {
            "message": "Missing item type\nSet up bookkeeping needed when dispatching.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:222"
        },
        {
            "message": "Missing item type\nClear bookkeeping used for dispatching.",
            "line": " doc/src/main/js/common/dispatcher/Dispatcher.js:237"
        },
        {
            "message": "Missing item type\nCopyright (c) 2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " doc/src/main/js/common/dispatcher/invariant.js:1"
        },
        {
            "message": "Missing item type\nUse invariant() to assert state which your program assumes to be true.\n\nProvide sprintf-style format (only %s is supported) and arguments\nto provide information about what broke and what you were\nexpecting.\n\nThe invariant message will be stripped in production, but the invariant\nwill remain to ensure logic does not differ in production.",
            "line": " doc/src/main/js/common/dispatcher/invariant.js:14"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/components/DebugInfo.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/components/LoginPanel.js:1"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/LoginActions.js:1"
        },
        {
            "message": "Missing item type\nActions available to views for login-related functionality.",
            "line": " doc/src/main/js/login/LoginActions.js:8"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/LoginActions.js:13"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/index.js:6"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/login/index.js:11"
        },
        {
            "message": "Missing item type",
            "line": " doc/src/main/js/app.js:1"
        }
    ]
}